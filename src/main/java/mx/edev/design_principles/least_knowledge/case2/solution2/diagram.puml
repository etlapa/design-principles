@startuml

class Professor {
  - name:String
  - courses:List<Course>
  + Professor(name:String)
  - initialize():List<Course>
  + announceExam(courseName:String, announcement:String):void
}

interface AnnouncementSubject {
   registerObserver(observer:Student):void
   unregisterObserver(observer:Student):void
   notifyObservers(announcement:String):void
}
note bottom of AnnouncementSubject
    Observer pattern
end note

class Course implements AnnouncementSubject {
  - name:String
  - students:List<Student>
  + Course(name:String, students:List<Student>)
  + getName():String
  + registerObserver(observer:Student):void
  + unregisterObserver(observer:Student):void
  + notifyObservers(announcement:String):void
}

class Student {
  - name:String
  + Student(name:String)
  + receiveAnnouncement(announcement:String):void
}

Professor *-- Course
Course o-- Student

@enduml